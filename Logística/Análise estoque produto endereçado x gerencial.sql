WITH ESTOQUE_ENDERECADO AS (
    SELECT A.PROD_ID,
           SUM (A.QTD) AS QT_END,
           B.FILIAL_ID
      FROM JCENDESTOQUE A
      LEFT JOIN JCENDAPTO B ON A.APTO_ID = B.ID
     GROUP BY A.PROD_ID,
              B.FILIAL_ID
), ESTOQUE_GERENCIAL AS (
    SELECT C.CODFILIAL,
           C.CODPROD,
           C.QTESTGER,
           C.DTULTINVENT
      FROM PCEST C
), BONUS_DIVERGENTE AS (
    SELECT D.DATABONUS,
           D.CODFILIAL,
           E.CODPROD,
           (E.QTNF - E.QTENTRADA) AS DIF_ENT
      FROM PCBONUSC D,
           PCBONUSI E
     WHERE D.NUMBONUS = E.NUMBONUS
       AND (E.QTNF - E.QTENTRADA) > 0
), PEDIDOS AS (
    SELECT G.CODFILIALRETIRA AS CODFILIAL,
           G.CODPROD,
           (
               CASE
                   WHEN (SUM (G.QT) <> SUM (NVL (H.QTD_MOV, 0))) THEN 'A SEPARAR'
                   ELSE 'SEPARADO'
               END
           ) AS STATUS,
           SUM (G.QT) AS QT
      FROM PCPEDI G
     INNER JOIN PCPEDC F ON G.NUMPED = F.NUMPED
      LEFT JOIN JCENDOSITEM H ON G.NUMPED = H.PEDIDO_ID
       AND G.NUMPED = H.PEDIDO_ID
       AND G.CODPROD = H.PROD_ID
     WHERE F.POSICAO IN (
        'L', 'M'
    )
     GROUP BY G.CODFILIALRETIRA,
              G.CODPROD
), DEVOLUCAO AS (
    SELECT MAX (I.DTMOV) AS MAX_DTMOV,
           I.CODFILIAL,
           I.CODPROD,
           SUM (I.QT) AS DIV_DEV
      FROM PCMOV I
      LEFT JOIN ESTOQUE_GERENCIAL G ON I.CODFILIAL = G.CODFILIAL
       AND I.CODPROD = G.CODPROD
     WHERE I.NUMBONUS IS NULL
       AND I.CODOPER IN (
        'ED', 'ET', 'ER'
    )
       AND I.DTMOV > G.DTULTINVENT
     GROUP BY I.CODFILIAL,
              I.CODPROD
)
SELECT DTULTINVENT,
       CODFILIAL,
       CODPROD,
       DESCRICAO,
       QT_GER,
       QT_END,
       DIF,
       BONUS_PEND,
       SEPARACAO_PEND,
       SITUACAO_SEP,
       DEVOLUCAO_PEND,
       (
           CASE
               WHEN (DIF = BONUS_PEND
                   OR DIF = (BONUS_PEND + SEPARACAO_PEND)
                   OR DIF = (DEVOLUCAO_PEND + SEPARACAO_PEND + BONUS_PEND)) THEN 'OK'
               WHEN (DIF = SEPARACAO_PEND
                   OR DIF = (DEVOLUCAO_PEND + SEPARACAO_PEND)
                   OR DIF = (DEVOLUCAO_PEND + SEPARACAO_PEND + BONUS_PEND)) THEN 'OK'
               WHEN (DIF = DEVOLUCAO_PEND
                   OR DIF = (DEVOLUCAO_PEND + SEPARACAO_PEND)
                   OR DIF = (DEVOLUCAO_PEND + SEPARACAO_PEND + BONUS_PEND)) THEN 'OK'
               ELSE 'ANALISAR'
           END
       ) AS STATUS
  FROM (
    SELECT G.DTULTINVENT,
           G.CODFILIAL,
           G.CODPROD,
           P.DESCRICAO,
           NVL (G.QTESTGER, 0) AS QT_GER,
           NVL (E.QT_END, 0) AS QT_END,
           NVL ((NVL (G.QTESTGER, 0) - NVL (E.QT_END, 0)), 0) AS DIF,
           NVL (B.DIF_ENT, 0) AS BONUS_PEND,
           NVL (Q.QT, 0) AS SEPARACAO_PEND,
           NVL (Q.STATUS, ' ') AS SITUACAO_SEP,
           NVL (D.DIV_DEV, 0) AS DEVOLUCAO_PEND
      FROM ESTOQUE_GERENCIAL G
      LEFT JOIN ESTOQUE_ENDERECADO E ON G.CODFILIAL = E.FILIAL_ID
       AND G.CODPROD = E.PROD_ID
      LEFT JOIN PCPRODUT P ON G.CODPROD = P.CODPROD
      LEFT JOIN BONUS_DIVERGENTE B ON G.CODFILIAL = B.CODFILIAL
       AND G.CODPROD = B.CODPROD
       AND G.DTULTINVENT < B.DATABONUS
      LEFT JOIN PEDIDOS Q ON G.CODFILIAL = Q.CODFILIAL
       AND G.CODPROD = Q.CODPROD
      LEFT JOIN DEVOLUCAO D ON G.CODFILIAL = D.CODFILIAL
       AND G.CODPROD = D.CODPROD
     WHERE (NVL (G.QTESTGER, 0) - NVL (E.QT_END, 0)) <> 0
       AND P.CODEPTO NOT IN (
        97, 98, 99
    )
       AND G.CODFILIAL IN (
        1
    )
     /*[FILIAL]*/
     ORDER BY G.CODPROD
)