WITH ENDERECAMENTO AS --TABELAS DE ENDEREÇOS
 (SELECT A.FILIAL_ID AS CODFILIAL,
         A.CODIGO    AS DEP,
         B.CODIGO    AS RUA,
         C.DESCRICAO AS LADO,
         D.CODIGO    AS PREDIO,
         E.CODIGO    AS NIVEL,
         F.CODIGO    AS APTO,
         F.ID        AS APTO_ID,
         F.AEREO
    FROM JCENDAPTO F
   INNER JOIN JCENDDEPOSITO A
      ON F.DEPOSITO_ID = A.ID
   INNER JOIN JCENDRUA B
      ON F.RUA_ID = B.ID
   INNER JOIN JCENDLADO C
      ON F.LADO_ID = C.ID
   INNER JOIN JCENDPREDIO D
      ON F.PREDIO_ID = D.ID
   INNER JOIN JCENDNIVEL E
      ON F.NIVEL_ID = E.ID
   WHERE F.ATIVO = 'S' AND B.CODIGO <> 99),
PRODUTO_POR_LOCAL AS --PRODUTOS COM ESTOQUE ENDERECADOS COM AS INFORMAÇÕES DOS SEUS ENDEREÇOS ATIVOS
 (SELECT G.APTO_ID,
         E.AEREO,
         E.CODFILIAL,
         E.DEP,
         E.RUA,
         E.LADO,
         E.PREDIO,
         E.NIVEL,
         E.APTO,
         G.PROD_ID   AS CODPROD,
         G.QTD       AS QT_ENDERECADO
    FROM JCENDESTOQUE G
    LEFT JOIN ENDERECAMENTO E
      ON G.APTO_ID = E.APTO_ID
     -- WHERE G.PROD_ID = 809075 AND E.CODFILIAL = 7
 ),
VERIFICA_ESTOQUE_PEGA AS --VERIFICA SE EXISTE ESTOQUE NO PICKING
 (SELECT L.CODFILIAL,
         L.AEREO,
         L.CODPROD,
         (CASE
           WHEN SUM(L.QT_ENDERECADO) > 0 THEN
            'S'
           ELSE
            'N'
         END) AS ESTOQUE_PIKING
    FROM PRODUTO_POR_LOCAL L
   WHERE L.AEREO = 'N'
   GROUP BY L.CODFILIAL, L.AEREO, L.CODPROD),
AGRUPADO_AEREO AS --ANALISE SE VAI PEGAR ESTOQUE DO AEREO OU PICKING
 (SELECT L.CODFILIAL,
         L.AEREO,
         L.CODPROD,
         SUM(L.QT_ENDERECADO) AS QT_TOTAL,
         NVL(E.ESTOQUE_PIKING, 'N') AS ESTOQUE_PIKING,
         (CASE
           WHEN (L.AEREO = 'N' AND E.ESTOQUE_PIKING = 'S') THEN
            'S'
           WHEN (L.AEREO = 'N' AND E.ESTOQUE_PIKING = 'N') THEN
            'N'
           WHEN (L.AEREO = 'S' AND SUM(L.QT_ENDERECADO) > 0 AND
                NVL(E.ESTOQUE_PIKING, 'N') = 'N') THEN
            'S'
           ELSE
            'N'
         END) AS PEGAR_ESTOQUE
    FROM PRODUTO_POR_LOCAL L
   LEFT JOIN VERIFICA_ESTOQUE_PEGA E
      ON L.CODPROD = E.CODPROD
     AND L.CODFILIAL = E.CODFILIAL
   GROUP BY L.CODFILIAL, L.CODPROD, L.AEREO, E.ESTOQUE_PIKING
  HAVING SUM(L.QT_ENDERECADO) > 0),
MENOR_ESTOQUE AS --VERIFICA QUAL O MENOR ESTOQUE DENTRO OS ENDEREÇOS PARA PEGAR O ESTOQUE  
 (SELECT L.CODFILIAL,
         L.AEREO,
         L.CODPROD,
         MIN(L.QT_ENDERECADO) MENOR_QT_ENDERECADO
    FROM PRODUTO_POR_LOCAL L
    LEFT JOIN AGRUPADO_AEREO A
      ON L.CODFILIAL = A.CODFILIAL
     AND L.CODPROD = A.CODPROD
     AND L.AEREO = A.AEREO
   WHERE A.PEGAR_ESTOQUE = 'S'
   GROUP BY L.CODFILIAL, L.CODPROD, L.AEREO),
MENOR_APTOID AS --VERIFICA QUAL A MENOR RUA DO MENOR ESTOQUE DENTRO OS ENDEREÇOS PARA PEGAR O ESTOQUE    
 (SELECT L.CODFILIAL,
         L.AEREO,
         L.CODPROD,
         M.MENOR_QT_ENDERECADO,
         MIN(L.APTO_ID) AS MENOR_APTO_ID
    FROM PRODUTO_POR_LOCAL L
   INNER JOIN MENOR_ESTOQUE M
      ON L.CODFILIAL = M.CODFILIAL
     AND L.CODPROD = M.CODPROD
     AND L.AEREO = M.AEREO
     AND L.QT_ENDERECADO = M.MENOR_QT_ENDERECADO
   GROUP BY L.CODFILIAL, L.CODPROD, L.AEREO, M.MENOR_QT_ENDERECADO),
ENDERECO_PEGA AS --ENDERECO PARA PEGA
 (SELECT L.APTO_ID,
         L.AEREO,
         L.CODFILIAL,
         L.DEP,
         L.RUA,
         L.LADO,
         L.PREDIO,
         L.NIVEL,
         L.APTO,
         L.CODPROD,
         L.QT_ENDERECADO
    FROM PRODUTO_POR_LOCAL L
   INNER JOIN MENOR_APTOID A
      ON L.APTO_ID = A.MENOR_APTO_ID
      AND L.CODPROD = A.CODPROD
      AND L.CODFILIAL = A.CODFILIAL
 )
--PESQUISA DO PEDIDO
SELECT E.APTO_ID,
       E.AEREO,
       E.CODFILIAL,
       E.DEP,
       E.RUA,
       E.LADO,
       E.PREDIO,
       E.NIVEL,
       E.APTO,
       E.QT_ENDERECADO,
       B.CODFILIALRETIRA,
       B.CODPROD,
       B.QT
  FROM PCPEDI B
  LEFT JOIN ENDERECO_PEGA E
    ON B.CODPROD = E.CODPROD
   AND B.CODFILIALRETIRA = E.CODFILIAL
 WHERE B.NUMPED = 27003717;
