CREATE OR REPLACE PACKAGE PKG_BI_CRIA_TABELAS IS

  -- Author  : JEFFERSON
  -- Created : 06/05/2023 19:14:19
  -- Purpose : Criação de todas as tabelas usadas no BI

  -- Public constant declarations
  ctTABLESPACE CONSTANT VARCHAR2(5):= 'TS_BI';

  PROCEDURE CRIA_TODAS_TABELAS;

END PKG_BI_CRIA_TABELAS;
/
CREATE OR REPLACE PACKAGE BODY PKG_BI_CRIA_TABELAS IS

  PROCEDURE FILIAL IS
    vNOME_TABELA VARCHAR2(30);
    vSQL_VERIFICA_TABELA VARCHAR2(256);
    vSQL_CRIA_TABELA VARCHAR2(512);
    vEXISTE_TABELA NUMBER(1);
  
  BEGIN
    vNOME_TABELA := 'FILIAL';
    vSQL_VERIFICA_TABELA := 'SELECT COUNT(*) FROM USER_TABLES WHERE TABLE_NAME = ''' ||
                            vNOME_TABELA || ''' AND TABLESPACE_NAME = ''' ||
                            ctTABLESPACE || '''';
    vSQL_CRIA_TABELA := 'CREATE TABLE ' || vNOME_TABELA || '
      (
        CODFILIAL VARCHAR2(2) NOT NULL,
        FILIAL    VARCHAR2(25) NOT NULL,
        EMPRESA   VARCHAR2(150) NOT NULL,
        ORDEM     NUMBER(2) NOT NULL,
        CONSTRAINT PK_CODFILIAL PRIMARY KEY (CODFILIAL),
        CONSTRAINT UN_ORDEM UNIQUE (ORDEM)
      ) 
      TABLESPACE ' || ctTABLESPACE;
  
    EXECUTE IMMEDIATE vSQL_VERIFICA_TABELA
      INTO vEXISTE_TABELA;
  
    IF vEXISTE_TABELA = 0
    THEN
      EXECUTE IMMEDIATE vSQL_CRIA_TABELA;
      DBMS_OUTPUT.PUT_LINE('NOVA TABELA ' || vNOME_TABELA ||
                           ' CRIADA COM SUCESSO!');
    ELSE
      DBMS_OUTPUT.PUT_LINE('TABELA ' || vNOME_TABELA || ' JÁ CRIADA.');
    END IF;
  END; --FILIAL

  PROCEDURE CRIA_TODAS_TABELAS IS
  BEGIN
    FILIAL;
  END;

END PKG_BI_CRIA_TABELAS;
/
